{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useMemo, useLayoutEffect } from 'react';\nimport { useFrame, useThree } from '@react-three/fiber';\nimport { AsciiEffect } from 'three-stdlib';\nimport * as THREE from 'three';\nexport function AsciiRenderer(_ref) {\n  _s();\n  var _ref$renderIndex = _ref.renderIndex,\n    renderIndex = _ref$renderIndex === void 0 ? 1 : _ref$renderIndex,\n    _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? 'black' : _ref$bgColor,\n    _ref$fgColor = _ref.fgColor,\n    fgColor = _ref$fgColor === void 0 ? 'white' : _ref$fgColor,\n    _ref$characters = _ref.characters,\n    characters = _ref$characters === void 0 ? ' .:-=+*#%@' : _ref$characters,\n    _ref$invert = _ref.invert,\n    invert = _ref$invert === void 0 ? true : _ref$invert,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? false : _ref$color,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 0.55 : _ref$resolution;\n  var _useThree = useThree(),\n    gl = _useThree.gl,\n    scene = _useThree.scene,\n    camera = _useThree.camera;\n  var effect = useMemo(function () {\n    var effect = new AsciiEffect(gl, characters, {\n      invert: invert,\n      color: color,\n      resolution: resolution\n    });\n    var container = gl.domElement.parentNode;\n    var width = container.clientWidth;\n    var height = container.clientHeight;\n    effect.setSize(width, height);\n    gl.setSize(width, height, false);\n    effect.domElement.style.cssText = \"\\n      position: absolute;\\n      left: 50%;\\n      top: 50%;\\n      transform: translate(-50%, -50%);\\n      background-color: \".concat(bgColor, \";\\n      color: \").concat(fgColor, \";\\n      font-family: monospace;\\n      width: 100%;\\n      height: 100%;\\n    \").trim();\n    return effect;\n  }, [gl, characters, invert, color, resolution, bgColor, fgColor]);\n  useEffect(function () {\n    function handleResize() {\n      var container = gl.domElement.parentNode;\n      var width = container.clientWidth;\n      var height = container.clientHeight;\n      effect.setSize(width, height);\n      gl.setSize(width, height, false);\n      if (camera instanceof THREE.PerspectiveCamera) {\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n      }\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, [gl, effect, camera]);\n  useFrame(function () {\n    effect.render(scene, camera);\n  }, renderIndex);\n  return null;\n}\n_s(AsciiRenderer, \"uqDkE2e3Ey6FQ9LU8W0c6NeqQIM=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = AsciiRenderer;\nvar _c;\n$RefreshReg$(_c, \"AsciiRenderer\");","map":{"version":3,"names":["useEffect","useMemo","useLayoutEffect","useFrame","useThree","AsciiEffect","THREE","AsciiRenderer","_ref","_s","_ref$renderIndex","renderIndex","_ref$bgColor","bgColor","_ref$fgColor","fgColor","_ref$characters","characters","_ref$invert","invert","_ref$color","color","_ref$resolution","resolution","_useThree","gl","scene","camera","effect","container","domElement","parentNode","width","clientWidth","height","clientHeight","setSize","style","cssText","concat","trim","handleResize","PerspectiveCamera","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","render","_c","$RefreshReg$"],"sources":["/Users/ewang/Documents/Github/ascii-renderer/src/components/AsciiRenderer.js"],"sourcesContent":["import { useEffect, useMemo, useLayoutEffect } from 'react'\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { AsciiEffect } from 'three-stdlib'\nimport * as THREE from 'three'\nexport function AsciiRenderer({\n  renderIndex = 1,\n  bgColor = 'black',\n  fgColor = 'white',  \n  characters = ' .:-=+*#%@',\n  invert = true,\n  color = false,\n  resolution = 0.55\n}) {\n  const { gl, scene, camera } = useThree()\n  \n  const effect = useMemo(() => {\n    const effect = new AsciiEffect(gl, characters, { \n      invert, \n      color, \n      resolution\n    })\n    \n    const container = gl.domElement.parentNode\n    const width = container.clientWidth\n    const height = container.clientHeight\n    \n    effect.setSize(width, height)\n    gl.setSize(width, height, false)\n    \n    effect.domElement.style.cssText = `\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      background-color: ${bgColor};\n      color: ${fgColor};\n      font-family: monospace;\n      width: 100%;\n      height: 100%;\n    `.trim()\n    \n    return effect\n  }, [gl, characters, invert, color, resolution, bgColor, fgColor])\n\n  useEffect(() => {\n    function handleResize() {\n      const container = gl.domElement.parentNode\n      const width = container.clientWidth\n      const height = container.clientHeight\n      \n      effect.setSize(width, height)\n      gl.setSize(width, height, false)\n      \n      if (camera instanceof THREE.PerspectiveCamera) {\n        camera.aspect = width / height\n        camera.updateProjectionMatrix()\n      }\n    }\n\n    window.addEventListener('resize', handleResize)\n    handleResize()\n\n    return () => window.removeEventListener('resize', handleResize)\n  }, [gl, effect, camera])\n\n  useFrame(() => {\n    effect.render(scene, camera)\n  }, renderIndex)\n\n  return null\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}