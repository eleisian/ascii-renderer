{"ast":null,"code":"import _classCallCheck from \"/Users/ewang/Documents/Github/ascii-renderer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ewang/Documents/Github/ascii-renderer/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/ewang/Documents/Github/ascii-renderer/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ewang/Documents/Github/ascii-renderer/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BufferGeometry, FileLoader, Float32BufferAttribute, Group, LineBasicMaterial, LineSegments, Loader, Material, Mesh, MeshPhongMaterial, Points, PointsMaterial, Vector3, Color } from 'three';\n\n// o object_name | g group_name\nvar _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nvar _material_library_pattern = /^mtllib /;\n// usemtl material_name\nvar _material_use_pattern = /^usemtl /;\n// usemap map_name\nvar _map_use_pattern = /^usemap /;\nvar _face_vertex_data_separator_pattern = /\\s+/;\nvar _vA = new Vector3();\nvar _vB = new Vector3();\nvar _vC = new Vector3();\nvar _ab = new Vector3();\nvar _cb = new Vector3();\nvar _color = new Color();\nfunction ParserState() {\n  var state = {\n    objects: [],\n    object: {},\n    vertices: [],\n    normals: [],\n    colors: [],\n    uvs: [],\n    materials: {},\n    materialLibraries: [],\n    startObject: function startObject(name, fromDeclaration) {\n      // If the current object (initial from reset) is not from a g/o declaration in the parsed\n      // file. We need to use it for the first parsed g/o to keep things in sync.\n      if (this.object && this.object.fromDeclaration === false) {\n        this.object.name = name;\n        this.object.fromDeclaration = fromDeclaration !== false;\n        return;\n      }\n      var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n      this.object = {\n        name: name || '',\n        fromDeclaration: fromDeclaration !== false,\n        geometry: {\n          vertices: [],\n          normals: [],\n          colors: [],\n          uvs: [],\n          hasUVIndices: false\n        },\n        materials: [],\n        smooth: true,\n        startMaterial: function startMaterial(name, libraries) {\n          var previous = this._finalize(false);\n\n          // New usemtl declaration overwrites an inherited material, except if faces were declared\n          // after the material, then it must be preserved for proper MultiMaterial continuation.\n          if (previous && (previous.inherited || previous.groupCount <= 0)) {\n            this.materials.splice(previous.index, 1);\n          }\n          var material = {\n            index: this.materials.length,\n            name: name || '',\n            mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n            smooth: previous !== undefined ? previous.smooth : this.smooth,\n            groupStart: previous !== undefined ? previous.groupEnd : 0,\n            groupEnd: -1,\n            groupCount: -1,\n            inherited: false,\n            clone: function clone(index) {\n              var cloned = {\n                index: typeof index === 'number' ? index : this.index,\n                name: this.name,\n                mtllib: this.mtllib,\n                smooth: this.smooth,\n                groupStart: 0,\n                groupEnd: -1,\n                groupCount: -1,\n                inherited: false\n              };\n              cloned.clone = this.clone.bind(cloned);\n              return cloned;\n            }\n          };\n          this.materials.push(material);\n          return material;\n        },\n        currentMaterial: function currentMaterial() {\n          if (this.materials.length > 0) {\n            return this.materials[this.materials.length - 1];\n          }\n          return undefined;\n        },\n        _finalize: function _finalize(end) {\n          var lastMultiMaterial = this.currentMaterial();\n          if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n            lastMultiMaterial.inherited = false;\n          }\n\n          // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n          if (end && this.materials.length > 1) {\n            for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n              if (this.materials[mi].groupCount <= 0) {\n                this.materials.splice(mi, 1);\n              }\n            }\n          }\n\n          // Guarantee at least one empty material, this makes the creation later more straight forward.\n          if (end && this.materials.length === 0) {\n            this.materials.push({\n              name: '',\n              smooth: this.smooth\n            });\n          }\n          return lastMultiMaterial;\n        }\n      };\n\n      // Inherit previous objects material.\n      // Spec tells us that a declared material must be set to all objects until a new material is declared.\n      // If a usemtl declaration is encountered while this new object is being parsed, it will\n      // overwrite the inherited material. Exception being that there was already face declarations\n      // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n      if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n        var declared = previousMaterial.clone(0);\n        declared.inherited = true;\n        this.object.materials.push(declared);\n      }\n      this.objects.push(this.object);\n    },\n    finalize: function finalize() {\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n    },\n    parseVertexIndex: function parseVertexIndex(value, len) {\n      var index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseNormalIndex: function parseNormalIndex(value, len) {\n      var index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseUVIndex: function parseUVIndex(value, len) {\n      var index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 2) * 2;\n    },\n    addVertex: function addVertex(a, b, c) {\n      var src = this.vertices;\n      var dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addVertexPoint: function addVertexPoint(a) {\n      var src = this.vertices;\n      var dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addVertexLine: function addVertexLine(a) {\n      var src = this.vertices;\n      var dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addNormal: function addNormal(a, b, c) {\n      var src = this.normals;\n      var dst = this.object.geometry.normals;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addFaceNormal: function addFaceNormal(a, b, c) {\n      var src = this.vertices;\n      var dst = this.object.geometry.normals;\n      _vA.fromArray(src, a);\n      _vB.fromArray(src, b);\n      _vC.fromArray(src, c);\n      _cb.subVectors(_vC, _vB);\n      _ab.subVectors(_vA, _vB);\n      _cb.cross(_ab);\n      _cb.normalize();\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n    },\n    addColor: function addColor(a, b, c) {\n      var src = this.colors;\n      var dst = this.object.geometry.colors;\n      if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addUV: function addUV(a, b, c) {\n      var src = this.uvs;\n      var dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n      dst.push(src[b + 0], src[b + 1]);\n      dst.push(src[c + 0], src[c + 1]);\n    },\n    addDefaultUV: function addDefaultUV() {\n      var dst = this.object.geometry.uvs;\n      dst.push(0, 0);\n      dst.push(0, 0);\n      dst.push(0, 0);\n    },\n    addUVLine: function addUVLine(a) {\n      var src = this.uvs;\n      var dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n    },\n    addFace: function addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n      var vLen = this.vertices.length;\n      var ia = this.parseVertexIndex(a, vLen);\n      var ib = this.parseVertexIndex(b, vLen);\n      var ic = this.parseVertexIndex(c, vLen);\n      this.addVertex(ia, ib, ic);\n      this.addColor(ia, ib, ic);\n\n      // normals\n\n      if (na !== undefined && na !== '') {\n        var nLen = this.normals.length;\n        ia = this.parseNormalIndex(na, nLen);\n        ib = this.parseNormalIndex(nb, nLen);\n        ic = this.parseNormalIndex(nc, nLen);\n        this.addNormal(ia, ib, ic);\n      } else {\n        this.addFaceNormal(ia, ib, ic);\n      }\n\n      // uvs\n\n      if (ua !== undefined && ua !== '') {\n        var uvLen = this.uvs.length;\n        ia = this.parseUVIndex(ua, uvLen);\n        ib = this.parseUVIndex(ub, uvLen);\n        ic = this.parseUVIndex(uc, uvLen);\n        this.addUV(ia, ib, ic);\n        this.object.geometry.hasUVIndices = true;\n      } else {\n        // add placeholder values (for inconsistent face definitions)\n\n        this.addDefaultUV();\n      }\n    },\n    addPointGeometry: function addPointGeometry(vertices) {\n      this.object.geometry.type = 'Points';\n      var vLen = this.vertices.length;\n      for (var vi = 0, l = vertices.length; vi < l; vi++) {\n        var index = this.parseVertexIndex(vertices[vi], vLen);\n        this.addVertexPoint(index);\n        this.addColor(index);\n      }\n    },\n    addLineGeometry: function addLineGeometry(vertices, uvs) {\n      this.object.geometry.type = 'Line';\n      var vLen = this.vertices.length;\n      var uvLen = this.uvs.length;\n      for (var vi = 0, l = vertices.length; vi < l; vi++) {\n        this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n      }\n      for (var uvi = 0, _l = uvs.length; uvi < _l; uvi++) {\n        this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n      }\n    }\n  };\n  state.startObject('', false);\n  return state;\n}\n\n//\nvar OBJLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(OBJLoader, _Loader);\n  var _super = _createSuper(OBJLoader);\n  function OBJLoader(manager) {\n    var _this;\n    _classCallCheck(this, OBJLoader);\n    _this = _super.call(this, manager);\n    _this.materials = null;\n    return _this;\n  }\n  _createClass(OBJLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"setMaterials\",\n    value: function setMaterials(materials) {\n      this.materials = materials;\n      return this;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(text) {\n      var state = new ParserState();\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n      var lines = text.split('\\n');\n      var result = [];\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i].trimStart();\n        if (line.length === 0) continue;\n        var lineFirstChar = line.charAt(0);\n\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n        if (lineFirstChar === 'v') {\n          var data = line.split(_face_vertex_data_separator_pattern);\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              if (data.length >= 7) {\n                _color.setRGB(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6])).convertSRGBToLinear();\n                state.colors.push(_color.r, _color.g, _color.b);\n              } else {\n                // if no colors are defined, add placeholders so color and vertex indices match\n\n                state.colors.push(undefined, undefined, undefined);\n              }\n              break;\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.slice(1).trim();\n          var vertexData = lineData.split(_face_vertex_data_separator_pattern);\n          var faceVertices = [];\n\n          // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          }\n\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          var v1 = faceVertices[0];\n          for (var _j = 1, _jl = faceVertices.length - 1; _j < _jl; _j++) {\n            var v2 = faceVertices[_j];\n            var v3 = faceVertices[_j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(' ');\n          var lineVertices = [];\n          var lineUVs = [];\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var _lineData = line.slice(1).trim();\n          var pointData = _lineData.split(' ');\n          state.addPointGeometry(pointData);\n        } else if ((result = _object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // let name = result[ 0 ].slice( 1 ).trim();\n          var name = (' ' + result[0].slice(1).trim()).slice(1);\n          state.startObject(name);\n        } else if (_material_use_pattern.test(line)) {\n          // material\n\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (_material_library_pattern.test(line)) {\n          // mtl file\n\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (_map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' ');\n\n          // smooth shading\n\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n          \t * http://paulbourke.net/dataformats/obj/\n          \t *\n          \t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n          \t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n          \t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n          \t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n          \t * than 0.\"\n          \t */\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n      state.finalize();\n      var container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      var hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n      if (hasPrimitives === true) {\n        for (var _i = 0, _l2 = state.objects.length; _i < _l2; _i++) {\n          var object = state.objects[_i];\n          var geometry = object.geometry;\n          var materials = object.materials;\n          var isLine = geometry.type === 'Line';\n          var isPoints = geometry.type === 'Points';\n          var hasVertexColors = false;\n\n          // Skip o/g line declarations that did not follow with any faces\n          if (geometry.vertices.length === 0) continue;\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n          if (geometry.normals.length > 0) {\n            buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n          }\n          if (geometry.colors.length > 0) {\n            hasVertexColors = true;\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n          }\n          if (geometry.hasUVIndices === true) {\n            buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n          }\n\n          // Create materials\n\n          var createdMaterials = [];\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            var materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n            var _material = state.materials[materialHash];\n            if (this.materials !== null) {\n              _material = this.materials.create(sourceMaterial.name);\n\n              // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n              if (isLine && _material && !(_material instanceof LineBasicMaterial)) {\n                var materialLine = new LineBasicMaterial();\n                Material.prototype.copy.call(materialLine, _material);\n                materialLine.color.copy(_material.color);\n                _material = materialLine;\n              } else if (isPoints && _material && !(_material instanceof PointsMaterial)) {\n                var materialPoints = new PointsMaterial({\n                  size: 10,\n                  sizeAttenuation: false\n                });\n                Material.prototype.copy.call(materialPoints, _material);\n                materialPoints.color.copy(_material.color);\n                materialPoints.map = _material.map;\n                _material = materialPoints;\n              }\n            }\n            if (_material === undefined) {\n              if (isLine) {\n                _material = new LineBasicMaterial();\n              } else if (isPoints) {\n                _material = new PointsMaterial({\n                  size: 1,\n                  sizeAttenuation: false\n                });\n              } else {\n                _material = new MeshPhongMaterial();\n              }\n              _material.name = sourceMaterial.name;\n              _material.flatShading = sourceMaterial.smooth ? false : true;\n              _material.vertexColors = hasVertexColors;\n              state.materials[materialHash] = _material;\n            }\n            createdMaterials.push(_material);\n          }\n\n          // Create mesh\n\n          var mesh = void 0;\n          if (createdMaterials.length > 1) {\n            for (var _mi = 0, _miLen = materials.length; _mi < _miLen; _mi++) {\n              var _sourceMaterial = materials[_mi];\n              buffergeometry.addGroup(_sourceMaterial.groupStart, _sourceMaterial.groupCount, _mi);\n            }\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials);\n            }\n          } else {\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials[0]);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials[0]);\n            }\n          }\n          mesh.name = object.name;\n          container.add(mesh);\n        }\n      } else {\n        // if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n        if (state.vertices.length > 0) {\n          var _material2 = new PointsMaterial({\n            size: 1,\n            sizeAttenuation: false\n          });\n          var _buffergeometry = new BufferGeometry();\n          _buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n          if (state.colors.length > 0 && state.colors[0] !== undefined) {\n            _buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n            _material2.vertexColors = true;\n          }\n          var points = new Points(_buffergeometry, _material2);\n          container.add(points);\n        }\n      }\n      return container;\n    }\n  }]);\n  return OBJLoader;\n}(Loader);\nexport { OBJLoader };","map":{"version":3,"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Group","LineBasicMaterial","LineSegments","Loader","Material","Mesh","MeshPhongMaterial","Points","PointsMaterial","Vector3","Color","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","_vB","_vC","_ab","_cb","_color","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","_createClass","key","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","result","i","line","trimStart","lineFirstChar","charAt","data","parseFloat","setRGB","convertSRGBToLinear","r","g","lineData","slice","trim","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","materialLine","prototype","copy","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"sources":["/Users/ewang/Documents/Github/ascii-renderer/node_modules/three/examples/jsm/loaders/OBJLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\t\t\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}