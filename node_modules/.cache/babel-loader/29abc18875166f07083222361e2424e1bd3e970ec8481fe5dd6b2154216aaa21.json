{"ast":null,"code":"var _jsxFileName = \"/Users/ewang/Documents/Github/ascii-renderer/src/components/Scene.js\",\n  _s = $RefreshSig$();\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { useThree } from \"@react-three/fiber\";\nimport { useEffect } from \"react\";\nimport { DynamicModel } from \"./DynamicModel\";\nimport { AsciiRenderer } from \"./AsciiRenderer\";\nimport Model from \"../Model\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Scene(_ref) {\n  _s();\n  var modelUrl = _ref.modelUrl,\n    modelType = _ref.modelType,\n    theme = _ref.theme,\n    themes = _ref.themes;\n  var _useThree = useThree(),\n    camera = _useThree.camera;\n\n  // Get current theme colors\n  var currentTheme = themes[theme];\n  useEffect(function () {\n    var _camera$parent, _camera$parent$parent, _camera$parent$parent2;\n    // Ensure camera aspect ratio is set correctly on mount\n    var container = (_camera$parent = camera.parent) === null || _camera$parent === void 0 ? void 0 : (_camera$parent$parent = _camera$parent.parent) === null || _camera$parent$parent === void 0 ? void 0 : (_camera$parent$parent2 = _camera$parent$parent.parent) === null || _camera$parent$parent2 === void 0 ? void 0 : _camera$parent$parent2.parent; // Find the canvas container\n    if (container) {\n      camera.aspect = container.clientWidth / container.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n  }, [camera]);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: [theme === 'dark' ? '#000000' : '#ffffff']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      position: [0, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [5, 5, 5],\n        intensity: 1,\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [-5, -5, -5],\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), !modelUrl && /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: [0, 0, 0],\n        scale: 1,\n        children: /*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [1, 1, 1, 32, 32, 32]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), modelUrl && /*#__PURE__*/_jsxDEV(DynamicModel, {\n        url: modelUrl,\n        type: modelType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      makeDefault: true,\n      enablePan: true,\n      enableZoom: true,\n      enableRotate: true,\n      minDistance: 2,\n      maxDistance: 20,\n      target: [0, 0, 0],\n      camera: camera\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsciiRenderer, {\n      fgColor: theme === 'dark' ? '#ffffff' : '#000000',\n      bgColor: theme === 'dark' ? '#000000' : '#ffffff',\n      resolution: 0.15,\n      characters: \" .:-+*=%@#\",\n      invert: false,\n      color: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Scene, \"Wo14/kl28HhoRfDX+Cg7MK2EhFU=\", false, function () {\n  return [useThree];\n});\n_c = Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["OrbitControls","PerspectiveCamera","useThree","useEffect","DynamicModel","AsciiRenderer","Model","jsxDEV","_jsxDEV","Scene","_ref","_s","modelUrl","modelType","theme","themes","_useThree","camera","currentTheme","_camera$parent","_camera$parent$parent","_camera$parent$parent2","container","parent","aspect","clientWidth","clientHeight","updateProjectionMatrix","children","attach","args","fileName","_jsxFileName","lineNumber","columnNumber","position","intensity","castShadow","scale","url","type","makeDefault","enablePan","enableZoom","enableRotate","minDistance","maxDistance","target","fgColor","bgColor","resolution","characters","invert","color","_c","$RefreshReg$"],"sources":["/Users/ewang/Documents/Github/ascii-renderer/src/components/Scene.js"],"sourcesContent":["import { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { useThree } from \"@react-three/fiber\";\nimport { useEffect } from \"react\";\nimport { DynamicModel } from \"./DynamicModel\";\nimport { AsciiRenderer } from \"./AsciiRenderer\";\nimport Model from \"../Model\";\n\nexport function Scene({ modelUrl, modelType, theme, themes }) {\n  const { camera } = useThree();\n\n  // Get current theme colors\n  const currentTheme = themes[theme]\n\n  useEffect(() => {\n    // Ensure camera aspect ratio is set correctly on mount\n    const container = camera.parent?.parent?.parent?.parent // Find the canvas container\n    if (container) {\n      camera.aspect = container.clientWidth / container.clientHeight\n      camera.updateProjectionMatrix()\n    }\n  }, [camera])\n\n  return (\n    <group>\n      <color attach=\"background\" args={[theme === 'dark' ? '#000000' : '#ffffff']} />\n      \n      <group position={[0, 0, 0]}>\n        <ambientLight intensity={0.5} />\n        <directionalLight \n          position={[5, 5, 5]} \n          intensity={1} \n          castShadow\n        />\n        <directionalLight \n          position={[-5, -5, -5]} \n          intensity={0.5} \n        />\n      \n        {/* Show default cube when no model is loaded */}\n        {!modelUrl && (\n          <mesh position={[0, 0, 0]} scale={1}>\n            <boxGeometry args={[1, 1, 1, 32, 32, 32]} />\n\n          </mesh>\n        )}\n\n        {/* Show uploaded model when available */}\n        {modelUrl && (\n          <DynamicModel \n            url={modelUrl} \n            type={modelType}\n          />\n        )}\n      </group>\n\n      <OrbitControls \n        makeDefault\n        enablePan={true}\n        enableZoom={true}\n        enableRotate={true}\n        minDistance={2}\n        maxDistance={20}\n        target={[0, 0, 0]}\n        camera={camera}\n      />\n      \n      <AsciiRenderer \n        fgColor={theme === 'dark' ? '#ffffff' : '#000000'}\n        bgColor={theme === 'dark' ? '#000000' : '#ffffff'}\n        resolution={0.15}\n        characters=' .:-+*=%@#'\n        invert={false}\n        color={false}\n      />\n    </group>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}